{"version":3,"sources":["components/profile.js","components/work-sample.js","components/content.js","components/scroll-to-up-button.js","Client.js","Login.js","withAuth.js","Admin.js","EditWorkSample.js","CreateWorkSample.js","App.js","serviceWorker.js","index.js"],"names":["Profile","react_default","a","createElement","className","src","alt","href","rel","target","WorkSample","props","Object","assign","isFirstChild","name","dist_default","medias","map","item","key","_id","data-src","title","ReactHtmlParser","description","Content","onClick","onPortfolioToggleClick","showPortfolio","id","workSamples","length","react_masonry_component_lib_default","options","transitionDuration","disableImagesLoaded","updateOnEachImageLoad","i","components_work_sample","ScrollToUpButton","modules","activeClass","to","smooth","duration","offset","spy","isDynamic","Client","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScrollPortrait","window","innerHeight","pageYOffset","document","body","scrollHeight","loadMoreWorkSamples","isFirstLoad","_ref","changeShowLoading","fetch","concat","state","workSamplesLoadCount","then","response","json","loadedWorkSamples","setState","objectSpread","isFirstChiled","showLoading","changeShowPortfolio","bind","assertThisInitialized","Cookie","load","save","userIp","path","maxAge","addEventListener","scrollSpy","update","_this2","Fragment","components_scroll_to_up_button","show","react_loading_bar_dist_default","color","showSpinner","components_profile","components_content","Component","Login","handleInputChange","event","_event$target","value","defineProperty","onSubmit","preventDefault","method","JSON","stringify","headers","Content-Type","res","status","history","push","catch","err","alert","error","username","password","loggedIn","Error","prevState","type","placeholder","email","onChange","required","withAuth","ComponentToProtect","_Component","_class","loading","redirect","inherits","createClass","console","_this$state","react_router","Admin","loadWorkSamples","isLoading","removeWorkSample","e","index","findIndex","o","splice","log","workSample","react_router_dom","arguments","undefined","React","EditWorkSample","addNewMedia","removeMedia","params","match","_this3","rows","cols","itemIndex","indexItem","App","exact","component","CreateWorkSample","Boolean","location","hostname","rootElement","getElementById","hasChildNodes","hydrate","src_App","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b7b16a5.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/profile.scss';\nfunction Profile() {\n  return (\n    <section className=\"profile-info-container box-shadow\">\n      <div className=\"profile-body\">\n        <div className=\"user-image-container unselectable\">\n          <img src=\"images/profile.jpg\" alt=\"Ali Naderlou\" />\n        </div>\n        <div className=\"user-about-container\">\n          <h1>Ali Naderlou</h1>\n          <h2>Full Stack Web Developer</h2>\n        </div>\n        <div className=\"user-quote-container\">\n          <p>\n            “The only way to do great work is to love what you do.” - Steve Jobs\n          </p>\n        </div>\n      </div>\n      <div className=\"user-social-medias-container\">\n        <ul>\n          <li className=\"mail\">\n            <a\n              href=\"mailto: alinaderlo77@hotmail.com\"\n              rel=\"noopener noreferrer\"\n            >\n              <i className=\"fas fa-at\" />\n            </a>\n          </li>\n          <li className=\"telegram\">\n            <a\n              href=\"https://telegram.me/AliNaderlou\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <i className=\"fab fa-telegram\" />\n            </a>\n          </li>\n          <li className=\"instagram\">\n            <a\n              href=\"https://instagram.com/Ali_Naderlou\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <i className=\"fab fa-instagram\" />\n            </a>\n          </li>\n          <li className=\"twitter\">\n            <a\n              href=\"https://www.twitter.com/AliNaderlou\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <i className=\"fab fa-twitter\" />\n            </a>\n          </li>\n          <li className=\"likedin\">\n            <a\n              href=\"https://www.linkedin.com/in/ali-naderlou-3692bb129/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <i className=\"fab fa-linkedin\" />\n            </a>\n          </li>\n        </ul>\n      </div>\n    </section>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport './styles/work-sample.scss';\nimport ReactHtmlParser from 'react-html-parser';\n\nfunction WorkSample(props) {\n  return (\n    <div className=\"work-sample box-shadow\" {...(props.isFirstChild===true) && {name:'FirstElement'}}>\n      <section className=\"work-sample-info-container\">\n        <AwesomeSlider className=\"aws\">\n          {props.medias.map((item) => <div key={props._id} data-src={item.src} />)}\n        </AwesomeSlider>\n        <div className=\"title\">\n          <h3>{props.title}</h3>\n        </div>\n        <div className=\"work-description\">\n          <p>{ReactHtmlParser(props.description)}</p>\n        </div>\n      </section>\n      {/* <footer>\n        <button>Read more...</button>\n      </footer> */}\n    </div>\n  );\n}\nexport default WorkSample;\n","import React from 'react';\nimport WorkSample from './work-sample';\nimport Masonry from 'react-masonry-component';\n\nimport './styles/content.scss';\nfunction Content(props) {\n  return (\n    <section className=\"content-container\">\n      <div className=\"header box-shadow unselectable\">\n        <div className=\"title\">Portfolio</div>\n        <i\n          onClick={props.onPortfolioToggleClick}\n          className={\n            props.showPortfolio\n              ? 'icon fas fa-angle-up'\n              : 'icon fas fa-angle-down'\n          }\n        />\n      </div>\n      <section\n        className={'portfolio-container ' + (props.showPortfolio ? '' : 'hide')}\n        id=\"portfolio-container\"\n      >\n        {props.workSamples.length === 0 ? (\n          <div />\n        ) : (\n          <Masonry\n            className={'portfolio'} // default ''\n            options={{ transitionDuration: 800 }} // default {}\n            disableImagesLoaded={false} // default false\n            updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n          >\n            {props.workSamples.map((item, i) => {\n              return (\n                <WorkSample\n                  isFirstChild={i === 0 ? true : false}\n                  {...item}\n                  key={item._id}\n                />\n              );\n            })}\n          </Masonry>\n        )}\n      </section>\n    </section>\n  );\n}\nexport default Content;\n","import React from 'react';\nimport { Link } from 'react-scroll';\nimport './styles/scroll-to-up-button.scss';\n\nfunction ScrollToUpButton(props) {\n  return (\n    <Link\n      activeClass=\"hide\"\n      to={props.to} \n      smooth={true}\n      duration={1000}\n      offset={-80}\n      spy={true}\n      isDynamic={true}\n    >\n      <div className=\"scroll-to-up-container\">\n        <i className=\"icon fas fa-angle-up\" />\n      </div>\n    </Link>\n  );\n}\nexport default ScrollToUpButton;\n","import React, { Component } from 'react';\nimport './styles/_mq.scss';\nimport './styles/fontawesome-free-5.8.2-web/css/all.min.css';\nimport './styles/normalize.scss';\nimport './styles/index.scss';\nimport Profile from './components/profile';\nimport Content from './components/content';\nimport Loading from 'react-loading-bar';\nimport ScrollToUpButton from './components/scroll-to-up-button';\nimport 'react-loading-bar/dist/index.css';\nimport Cookie from 'react-cookies';\nimport { scrollSpy } from 'react-scroll';\n\nclass Client extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPortfolio: true,\n      workSamples: [],\n      workSamplesLoadCount: 0,\n      showLoading: true,\n      isFirstLoad: true,\n    };\n    this.changeShowPortfolio = this.changeShowPortfolio.bind(this);\n    this.handleScrollPortrait = this.handleScrollPortrait.bind(this);\n    this.loadMoreWorkSamples = this.loadMoreWorkSamples.bind(this);\n    this.changeShowLoading = this.changeShowLoading.bind(this);\n    if (!Cookie.load('userIp')) {\n      fetch(`/api/data/submit-ip-address`)\n        .then((response) => {\n          return response.json();\n        })\n        .then((response) => {\n          Cookie.save(\n            'userIp',\n            response.userIp,\n            { path: '/' },\n            { maxAge: 900000 },\n          );\n        });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScrollPortrait);\n    this.loadMoreWorkSamples({ isFirstLoad: true });\n    scrollSpy.update();\n  }\n  handleScrollPortrait = () => {\n    const bottom =\n      window.innerHeight + window.pageYOffset >= document.body.scrollHeight;\n    if (bottom) {\n      this.loadMoreWorkSamples({ isFirstLoad: false });\n    }\n  };\n  loadMoreWorkSamples = ({ isFirstLoad }) => {\n    if (!isFirstLoad) {\n      this.changeShowLoading();\n    }\n    fetch(\n      `/api/data/get-worksamples/${\n        this.state.workSamplesLoadCount\n      }`,\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((workSamples) => {\n        const loadedWorkSamples = workSamples;\n        this.setState((state) => {\n          let workSamples = state.workSamples.concat(loadedWorkSamples);\n          if (isFirstLoad) {\n            workSamples[0] = { ...workSamples[0], isFirstChiled: true };\n          }\n          let workSamplesLoadCount = state.workSamplesLoadCount + 1;\n          return {\n            workSamples,\n            isFirstLoad,\n            workSamplesLoadCount,\n          };\n        });\n        this.changeShowLoading();\n      });\n  };\n  changeShowPortfolio() {\n    this.setState((state) => {\n      return { ...state, showPortfolio: !state.showPortfolio };\n    });\n  }\n  changeShowLoading() {\n    this.setState((state) => {\n      return { ...state, showLoading: !state.showLoading };\n    });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <ScrollToUpButton show={true} to=\"FirstElement\" />\n        <Loading\n          show={this.state.showLoading}\n          color=\"#05a19c\"\n          showSpinner={false}\n        />\n        <Profile />\n        <Content\n          onPortfolioToggleClick={() => this.changeShowPortfolio()}\n          showPortfolio={this.state.showPortfolio}\n          workSamples={this.state.workSamples}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Client;\n","import React, { Component } from 'react';\nimport './styles/login.scss'\nimport './styles/index.scss';\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      loggedIn: false,\n    };\n  }\n  handleInputChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  onSubmit = (event) => {\n    event.preventDefault();\n    fetch(`/api/auth/authenticate`, {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          this.props.history.push('/admin');\n        } else {\n          throw res.json();\n        }\n      })\n      .catch((err) => {\n        err.then((err) => {\n          alert(err.error);\n        });\n      });\n  };\n  componentDidMount() {\n    fetch(`/api/checkToken`)\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState((prevState, props) => ({\n            ...prevState,\n            loggedIn: true,\n          }));\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n  }\n  render() {\n    return (\n    <section className=\"loginContainer\">\n         {(!this.state.loggedIn) ? \n         <form onSubmit={this.onSubmit} className=\"loginFormContainer\">\n        <h1>Login Mr.Naderlou</h1>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Enter username\"\n          value={this.state.email}\n          onChange={this.handleInputChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n          value={this.state.password}\n          onChange={this.handleInputChange}\n          required\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n     : \n      <h1>You already logged In</h1>\n    }\n      </section>\n    )\n  }\n}\n\nexport default Login;\n","// withAuth.jsx\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n    \n    componentDidMount() {\n      fetch('/api/checkToken')\n        .then(res => {\n          if (res.status === 200) {\n            this.setState({ loading: false });\n          } else {\n            const error = new Error(res.error);\n            throw error;\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({ loading: false, redirect: true });\n        });\n    }\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/itsme\" />;\n      }\n      return (\n        <React.Fragment>\n          <ComponentToProtect {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles/admin.scss'\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workSamples: [],\n      isLoading: true,\n    };\n    this.loadWorkSamples = this.loadWorkSamples.bind(this);\n    this.removeWorkSample = this.removeWorkSample.bind(this);\n  }\n  componentDidMount() {\n    this.loadWorkSamples();\n  }\n  loadWorkSamples = () => {\n    fetch(`/api/data/get-worksamples/All`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((workSamples) => {\n        const loadedWorkSamples = workSamples;\n        this.setState({\n          workSamples: loadedWorkSamples,\n          isLoading: false,\n        });\n      });\n  };\n  removeWorkSample = (e, id) => {\n    e.preventDefault();\n    fetch(`/api/data/remove-worksample`, {\n      method: 'POST',\n      body: JSON.stringify({ id }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState((prevState) => {\n            let workSamples = prevState.workSamples; // creating copy of state variable jasper\n            var index = workSamples.findIndex(function(o) {\n              return o._id === id;\n            });\n            if (index !== -1) workSamples.splice(index, 1);\n            workSamples.splice(index, 1);\n            return { workSamples }; // return new object jasper object\n          });\n        } else {\n          throw res.json();\n        }\n        alert('Removed');\n      })\n      .catch((err) => {\n        console.log(err.error);\n      });\n  };\n  render() {\n    return (\n      <section className=\"adminPanelContainer\">\n        {this.state.isLoading ? (\n          <h1>Loading...</h1>\n        ) : (\n          <ul>\n            {this.state.workSamples.map((workSample, index) => {\n              return (\n                <li key={index}>\n                  <Link to={`/admin/edit/worksample/${workSample._id}`}>\n                    {`${index} ${workSample.title}`}\n                  </Link>\n                  <button\n                    onClick={(e, indexItem = index) =>\n                      this.removeWorkSample(e, workSample._id)\n                    }\n                  >\n                    X\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        <Link to=\"/admin/create/worksample/\">\n          <div className=\"scroll-to-up-container\">\n            <i className=\"icon fas fa-plus\" />\n          </div>\n        </Link>\n      </section>\n    );\n  }\n}\nexport default Admin;\n","import React from 'react';\nimport './styles/edit-worksample.scss';\nclass EditWorkSample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      workSample: {},\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addNewMedia = this.addNewMedia.bind(this);\n    this.removeMedia = this.removeMedia.bind(this);\n  }\n  componentDidMount() {\n    const {\n      match: { params },\n    } = this.props;\n    fetch(`/api/data/get-worksample/${params.id}`)\n      .then((res) => res.json())\n      .then((workSample) => {\n        this.setState({\n          workSample,\n          isLoading: false,\n        });\n      });\n  }\n  handleInputChange = (event, index) => {\n    const { value, name } = event.target;\n    if (!(name === 'media')) {\n      this.setState((prevState) => {\n        let workSample = Object.assign({}, prevState.workSample); // creating copy of state variable jasper\n        workSample[name] = value; // update the name property, assign a new value\n        return { workSample }; // return new object jasper object\n      });\n    } else {\n      this.setState((prevState) => {\n        let workSample = Object.assign({}, prevState.workSample); // creating copy of state variable jasper\n        workSample.medias[index].src = value; // update the name property, assign a new value\n        return { workSample }; // return new object jasper object\n      });\n    }\n  };\n  addNewMedia = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => {\n      let workSample = Object.assign({}, prevState.workSample); // creating copy of state variable jasper\n      workSample.medias.push({ src: '' });\n      return { workSample }; // return new object jasper object\n    });\n  };\n  removeMedia = (e, index) => {\n    e.preventDefault();\n    this.setState((prevState) => {\n      let workSample = Object.assign({}, prevState.workSample); // creating copy of state variable jasper\n      workSample.medias.splice(index,1);\n      return { workSample }; // return new object jasper object\n    });\n    console.log(this.state.workSample)\n  };\n  onSubmit = (event) => {\n    event.preventDefault();\n    fetch(`/api/data/update-worksample`, {\n      method: 'POST',\n      body: JSON.stringify(this.state.workSample),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          alert('Updated');\n        } else {\n          throw res.json();\n        }\n      })\n      .catch((err) => {\n        console.log(err.error);\n      });\n  };\n  render() {\n    return (\n      <section className=\"edit-worksample-container\">\n        {this.state.isLoading ? (\n          <h3>Loading...</h3>\n        ) : (\n          <form onSubmit={this.onSubmit}>\n            <input\n              name=\"title\"\n              value={this.state.workSample.title}\n              onChange={this.handleInputChange}\n            />\n            <textarea\n              rows=\"10\"\n              cols=\"40\"\n              name=\"description\"\n              onChange={this.handleInputChange}\n              value={this.state.workSample.description}\n            />\n            <h4>Medias:</h4>\n            <div className=\"medias-container\">\n              {this.state.workSample.medias.map((item, itemIndex) => {\n                const index = itemIndex;\n                return (\n                  <div className=\"media\" key={index}>\n                    <input\n                      value={item.src}\n                      name=\"media\"\n                      onChange={(e, indexItem = index) =>\n                        this.handleInputChange(e, indexItem)\n                      }\n                    />\n                    <button\n                      className=\"delete-worksample-button\"\n                      onClick={(e, indexItem = index) =>\n                        this.removeMedia(e, indexItem)\n                      }\n                    >\n                      X\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n            <button className=\"new-media-button\" onClick={this.addNewMedia}>\n              +\n            </button>\n            <input type=\"submit\" value=\"Update\" />\n          </form>\n        )}\n      </section>\n    );\n  }\n}\nexport default EditWorkSample;\n","import React from 'react';\nimport './styles/edit-worksample.scss';\nclass EditWorkSample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      workSample: {\n        title: '',\n        description: '',\n        medias: [],\n      },\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addNewMedia = this.addNewMedia.bind(this);\n    this.removeMedia = this.removeMedia.bind(this);\n  }\n  componentDidMount() {}\n  handleInputChange = (event, index) => {\n    const { value, name } = event.target;\n    if (!(name === 'media')) {\n      this.setState((prevState) => {\n        let workSample = Object.assign({}, prevState.workSample); // creating copy of state variable jasper\n        workSample[name] = value; // update the name property, assign a new value\n        return { workSample }; // return new object jasper object\n      });\n    } else {\n      this.setState((prevState) => {\n        let workSample = Object.assign({}, prevState.workSample); // creating copy of state variable jasper\n        workSample.medias[index].src = value; // update the name property, assign a new value\n        return { workSample }; // return new object jasper object\n      });\n    }\n  };\n  addNewMedia = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => {\n      let workSample = Object.assign({}, prevState.workSample); // creating copy of state variable jasper\n      workSample.medias.push({ src: '' });\n      return { workSample }; // return new object jasper object\n    });\n  };\n  removeMedia = (e, index) => {\n    e.preventDefault();\n    this.setState((prevState) => {\n      let workSample = Object.assign({}, prevState.workSample); // creating copy of state variable jasper\n      workSample.medias.splice(index, 1);\n      return { workSample }; // return new object jasper object\n    });\n  };\n  onSubmit = (event) => {\n    event.preventDefault();\n    fetch(`/api/data/create-worksample`, {\n      method: 'POST',\n      body: JSON.stringify(this.state.workSample),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          alert('Added');\n          this.props.history.push('/admin');\n        } else {\n          throw res.json();\n        }\n      })\n      .catch((err) => {\n        console.log(err.error);\n      });\n  };\n  render() {\n    return (\n      <section className=\"edit-worksample-container\">\n        <form onSubmit={this.onSubmit}>\n          <input\n            name=\"title\"\n            value={this.state.workSample.title}\n            onChange={this.handleInputChange}\n            placeholder=\"Title\"\n          />\n          <textarea\n            rows=\"10\"\n            cols=\"40\"\n            name=\"description\"\n            placeholder=\"Some description...\"\n            onChange={this.handleInputChange}\n            value={this.state.workSample.description}\n          />\n          <h4>Medias:</h4>\n          <div className=\"medias-container\">\n            {this.state.workSample.medias.map((item, itemIndex) => {\n              const index = itemIndex;\n              return (\n                <div className=\"media\" key={index}>\n                  <input\n                    value={item.src}\n                    name=\"media\"\n                    placeholder=\"/imagesOrvideos/...\"\n                    onChange={(e, indexItem = index) =>\n                      this.handleInputChange(e, indexItem)\n                    }\n                  />\n                  <button\n                    className=\"delete-worksample-button\"\n                    onClick={(e, indexItem = index) =>\n                      this.removeMedia(e, indexItem)\n                    }\n                  >\n                    X\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n          <button className=\"new-media-button\" onClick={this.addNewMedia}>\n            +\n          </button>\n          <input type=\"submit\" value=\"Save\" />\n        </form>\n      </section>\n    );\n  }\n}\nexport default EditWorkSample;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Client from './Client';\nimport Login from './Login';\nimport withAuth from './withAuth';\nimport Admin from './Admin'\nimport EditWorkSample from './EditWorkSample'\nimport CreateWorkSample from './CreateWorkSample'\n\nclass App extends Component {\n  constructor(props) {\n    super();\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={Client} />\n          <Route path=\"/itsme\" component={Login} />\n          <Route path=\"/admin\" component={withAuth(Admin)} exact={true} />\n          <Route path=\"/admin/edit/worksample/:id\" component={withAuth(EditWorkSample)} />\n          <Route path=\"/admin/create/worksample/\" component={withAuth(CreateWorkSample)} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { hydrate, render } from \"react-dom\";\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}